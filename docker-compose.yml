version: '3.5'
services:
  db-service:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    container_name: questions-database
    environment:
      - MYSQL_PASSWORD=secret
      - MYSQL_USER=user_questions
      - MYSQL_DATABASE=questions
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3307:3306"
    expose:
      - "3306"
    volumes:
      - ./database/docker-data/mysql:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - questions_network

  backend-service:
    container_name: questions-backend
    build: ./backend
    image: questions-backend:1.0.0
    working_dir: /app
    environment:
      - APP_ENV=local
    depends_on:
      - db-service
    networks:
      - questions_network
    volumes:
      - vendor:/app/vendor
      - ./backend:/app
  nginx-service:
    build:
      context: ./backend
      dockerfile: NginxDockerfile
      args:
        EXPOSE_PORT: 80
    image: questions-webserver-nginx:1.0.0
    container_name: questions-webserver
    working_dir: /app
    volumes:
      - ./backend:/app
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "88:80"
    depends_on:
      - backend-service
    networks:
      - questions_network

  node-service:
    image: node:10
    container_name: questions-web
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./frontend:/home/node/app
    command:
      sh -c 'cp .env.example .env && npm i && npm run serve'
    ports:
      - "8088:8080"
    environment:
      - NODE_ENV=development
    networks:
      - questions_network

networks:
  questions_network:
    name: questions_network
    driver: bridge
volumes:
  vendor: